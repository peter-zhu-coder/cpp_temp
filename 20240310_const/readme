1. Const在函数前:
实际上是约束函数的返回的，表明返回的值不能做左值，实际上就是防止返回值直接被赋值。但是一般的变量无法修改函数返回值，其实是为了防止函数返回类型为指针类型时，通过指针对返回值进行修改。非指针的函数返回类型前加const是没有意义的。


2. const放在函数后：
通常是用在类中，限制类的成员函数不能对成员变量进行修改。同时，被函数后的const修饰的成员函数也不能调用其他非const的成员函数。（调用成员函数时，编译器会自动给每一个函数加一个this指针）
示例中，setName2函数将无法修改成员变量，下面的写法会报错。实际上在类的成员函数中，我们有许多情况不希望成员函数修改成员变量，在其后加上const可以使得程序更加的严谨，健壮性更强。

3. 非const函数和const函数
在类中，经常有两个同名函数，一个在函数后不带const，另一个在函数后带const。
如果函数名相同，在相同的作用域内，其参数类型、参数个数，参数顺序等不同都能构成函数重载。
有趣的是如果同时在类中，对于函数名相同参数列表也相同的成员函数的const函数和非const函数也能够构成重载。
它们被调用的时机为：如果定义的对象是常对象，则调用的是const成员函数，如果定义的对象是非常对象，则调用重载的非const成员函数。
